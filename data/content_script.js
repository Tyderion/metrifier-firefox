// Generated by CoffeeScript 1.6.2
var console, converted, prefSet;

console = unsafeWindow.console;

converted = {
  fahrenheit: []
};

prefSet = null;

self.port.on("setPrefs", function(payload) {
  prefSet = payload;
  return console.log(prefSet.prefs);
});

self.port.on("convert", function(payload) {
  var celsius, elems, fahrenheit, myArray, myRe, newRegex, newval, replaced, str;

  console.log("Converting");
  elems = $('*');
  myRe = new RegExp("([0-9]+) (?:" + payload + ")", "gi");
  console.log(myRe);
  str = $('body').html();
  myArray = void 0;
  replaced = str;
  celsius = new Qty("celsius");
  while ((myArray = myRe.exec(replaced)) !== null) {
    newRegex = new RegExp("" + myArray[0]);
    fahrenheit = new Qty("" + myArray[1] + " fahrenheit");
    newval = fahrenheit.toString(prefSet.prefs.temperature_to, 2).slice(0, -4).trim() + " " + prefSet.prefs.temperature_unit.trim();
    console.log(newval);
    converted.fahrenheit.push({
      newval: newval,
      oldval: myArray[0]
    });
    replaced = replaced.replace(newRegex, newval);
  }
  return $('body').html(replaced);
});

self.port.on("undo", function(payload) {
  var reg, replaced, undo, _i, _len, _ref;

  console.log("Undoing", payload === "all");
  replaced = $('body').html();
  if (payload === "fahrenheit" || payload === "all") {
    _ref = converted.fahrenheit;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      undo = _ref[_i];
      reg = new RegExp("" + undo.newval);
      replaced = replaced.replace(undo.newval, undo.oldval);
    }
  }
  return $('body').html(replaced);
});

self.port.on("log", function(payload) {
  return console.log(payload);
});
